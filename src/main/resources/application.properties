spring.application.name=web_mvc_keycloak

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/lab2db2
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:3307/${DB_NAME:lab2db2}
#spring.datasource.username=root
spring.datasource.username=david
spring.datasource.password=Passer1234@

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# Configuration du client OAuth2
spring.security.oauth2.client.registration.keycloak.client-id=webmvcapp-client
spring.security.oauth2.client.registration.keycloak.client-secret=your-client-secret
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code

# Configuration du fournisseur OAuth2
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/webmvcapp-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/webmvcapp-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/webmvcapp-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/webmvcapp-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/webmvcapp-realm/protocol/openid-connect/certs


server.port=8081
